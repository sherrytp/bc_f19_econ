mes <- df_team_avg$`mean(investment)`[which(df_team_avg == "message")]
wilcox.test(ppl, pay, var.equal = F, paired = F)
wilcox.test(pay, mes, var.equal = F, paired = F)
wilcox.test(team, mes, var.equal = F, paired = F)
wilcox.test(team, pay, var.equal = F, paired = F)   # get 0.1 but should be > 0.3
wilcox.test(ppl, team, var.equal=F, paired = F)
wilcox.test(ppl, pay, var.equal = F, paired = F)
wilcox.test(pay, mes, var.equal = F, paired = F)
wilcox.test(team, mes, var.equal = F, paired = F)
wilcox.test(team, pay, var.equal = F, paired = F)
library(dummies)
install.packages("dummies")
library(dummies)
df_narrow %>%
dummy(treatment, sep = "_") %>%
m <- lm(decision ~ treatment, data = df_team_avg)
df_narrow %>%
dummy(treatment, sep = "_")
df_narrow <- cbind(df_narrow, dummy(df_narrow$year, sep = "_"))
df_narrow <- cbind(df_narrow, dummy(df_narrow$treatment, sep = "_"))
View(df_narrow)
View(df_narrow)
m <- lm(investment ~ df_narrow_teams+df_narrow_pay-comm+df_narrow_message+df_narrow_mixed, data = df_narrow)
View(df_narrow)
colnames(df_narrow)
m <- lm(investment ~ df_narrow_teams+"df_narrow_pay-comm"+df_narrow_message+df_narrow_mixed, data = df_narrow)
library(readxl)
School <- read_excel("~/Applications/OneDrive/Orientation data 2019.xlsx",
sheet = "School")
View(School)
plot(School)
School$Registered
# Grouped
value <- School$Registered
ggplot(School, aes(fill=Registered, y=value, x=School)) +
geom_bar(position="dodge", stat="identity")
library(ggplot2)
# Grouped
value <- School$Registered
ggplot(School, aes(fill=Registered, y=value, x=School)) +
geom_bar(position="dodge", stat="identity")
ggplot(School, aes(fill=Attend, y=value, x=School)) +
geom_bar(position="dodge", stat="identity")
# Grouped
value <- School$Registered
ggplot(School, aes(fill=Attend, y=value, x=School)) +
geom_bar(position="dodge", stat="identity")
# Grouped
value <- School$Registered
ggplot(School, aes(fill=attend, y=value, x=School)) +
geom_bar(position="dodge", stat="identity")
# Grouped
value <- School$attend
ggplot(School, aes(y=value, x=School)) +
geom_bar(position="dodge", stat="identity")
# Grouped
value <- School$Registered
ggplot(School, aes(y=value, x=School)) +
geom_bar(position="dodge", stat="identity")
# Grouped
value <- School$Registered
ggplot(School, aes(fill=condition, y=value, x=School)) +
geom_bar(position="dodge", stat="identity")
rm(list = ls()) # Clear environment
library(tidyverse)
library(cowplot)
library(sandwich)
library(lmtest)
df <- read_csv("sutterexperiment.csv")
old.names <- colnames(df)
new.names <- tolower(old.names)
colnames(df) <- new.names
rm(new.names, old.names)
df$treatment <- tolower(df$treatment)
df <- df %>%
mutate(uniquesubject = paste(session, treatment, subject, sep = "_"))
df <- df %>%
mutate(uniqueteam = paste(session, team, sep = "_"))
df <- df %>% mutate(uniqueteam = ifelse(treatment == "individuals", uniquesubject, uniqueteam))
df_narrow <- df %>%
gather("round", "investment", -c(session, subject, treatment, team, uniquesubject, uniqueteam)) %>%
arrange(session, subject, treatment, team)
# df %>% gather("key", "value", x, y, z) is equivalent to df %>% pivot_longer(c(x, y, z), names_to = "key", values_to = "value")
#df_narrow <- read_csv("sutterexperiment_long.csv")
df_narrow$round <- gsub("r", "", df_narrow$round)
df_narrow %>%
group_by(treatment) %>%
select(investment) %>%
summarise_all(funs(mean, sd))
df_narrow %>%
group_by(treatment) %>%
ggplot(., aes(treatment, investment)) +
stat_summary(fun.y = mean, geom = "bar", fill="grey") +
stat_summary(fun.data = mean_se, geom = "errorbar", width=0.1) +
labs(y = "mean and standard error", x = "Treatment", title = "Mean and Error Bars of Each Treatment") +
theme_classic()
#table1 <- df_narrow %>%  filter(treatment == c("individuals", "teams"))%>%  group_by(round, treatment) %>%  summarise(y = mean(investment))
#fig1 <- ggplot(table1, aes(round, y, group = treatment)) + geom_line(color = "grey") + geom_point(alpha = 0.75, aes(shape = treatment))
fig1 <- df_narrow %>%
select(treatment, round, investment) %>%
filter(treatment == c("individuals", "teams")) %>%
group_by(round, treatment) %>%
summarise(y = mean(investment)) %>%
ggplot(., aes(round, y)) +
geom_line(aes(group = treatment), color = "grey") +
geom_point(alpha=0.75, aes(shape = treatment)) +
labs(size = "Round") +
theme_classic()
fig1
table2.1 <- df_narrow %>%
filter(treatment == "individuals") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2.2 <- df_narrow %>%
filter(treatment == "pay-comm") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2.3 <- df_narrow %>%
filter(treatment == "message") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2 <- rbind(table2.1, table2.2)
table2 <- rbind(table2, table2.3)
fig2 <- ggplot(table2, aes(round, y, group = treatment)) + geom_line(color = "grey") + geom_point(alpha = 0.75, aes(shape = treatment))
fig2
pic2 <- df_narrow %>%
select(treatment, round, investment) %>%
filter(treatment == c("individuals", "pay-comm", "message")) %>%
group_by(treatment, round) %>%
summarise(y = mean(investment, na.rm = TRUE)) %>%
ggplot(., aes(round, y)) +
geom_line(aes(group = treatment), color = "grey") +
geom_point(alpha=0.75, aes(shape = treatment)) +
labs(size = "Round") +
theme_classic()
pic2
fig3 <- df_narrow %>%
select(treatment, round, investment) %>%
filter(treatment == c("individuals", "mixed")) %>%
group_by(round, treatment) %>%
summarise(y = mean(investment)) %>%
ggplot(., aes(round, y)) +
geom_line(aes(group = treatment), color = "grey") +
geom_point(alpha=0.75, aes(shape = treatment)) +
labs(size = "Round") +
theme_classic()
fig3
rm(table1, table2.1, table2.2, table2.3, table2, table3)
plot_grid(fig1, fig2, fig3,
labels = c('a', 'b', 'c'),
nrow = 1)
df_team_avg <- df_narrow %>%
group_by(treatment, uniqueteam) %>%
summarise(mean(investment))
# should be get 99 rows
df_narrow %>%
group_by(uniqueteam) %>%
summarise(mean(investment))
ppl <- df_team_avg$`mean(investment)`[which(df_team_avg == "individuals")]
team <- df_team_avg$`mean(investment)`[which(df_team_avg == "teams")]
wilcox.test(ppl, team, var.equal=F, paired = F)
pay <- df_team_avg$`mean(investment)`[which(df_team_avg == "pay-comm")]
mes <- df_team_avg$`mean(investment)`[which(df_team_avg == "message")]
wilcox.test(ppl, pay, var.equal = F, paired = F)
wilcox.test(pay, mes, var.equal = F, paired = F)   # 0.06903
wilcox.test(team, mes, var.equal = F, paired = F)
wilcox.test(team, pay, var.equal = F, paired = F)
df_narrow <- cbind(df_narrow, dummy(df_narrow$treatment, sep = "_"))
View(df_narrow)
#m <- lm(investment ~ df_narrow_teams+"df_narrow_pay-comm"+df_narrow_message+df_narrow_mixed, data = df_narrow)
m <- lm(investment ~ treatment, data = df_narrow)
summary(m)
lmtest::coeftest(m, vcov_subjectid)
vcov_subjectid <- sandwich::vcovCL(m, cluster = df_narrow$uniquesubject)
lmtest::coeftest(m, vcov_subjectid)
rm(list = ls()) # Clear environment
library(tidyverse)
library(tidyverse)
library(cowplot)
library(sandwich)
library(lmtest)
df <- read_csv("sutterexperiment.csv")
old.names <- colnames(df)
new.names <- tolower(old.names)
colnames(df) <- new.names
rm(new.names, old.names)
df$treatment <- tolower(df$treatment)
df <- df %>%
mutate(uniquesubject = paste(session, treatment, subject, sep = "_"))
df <- df %>%
mutate(uniqueteam = paste(session, team, sep = "_"))
df <- df %>% mutate(uniqueteam = ifelse(treatment == "individuals", uniquesubject, uniqueteam))
df_narrow <- df %>%
gather("round", "investment", -c(session, subject, treatment, team, uniquesubject, uniqueteam)) %>%
arrange(session, subject, treatment, team)
#df_narrow <- read_csv("sutterexperiment_long.csv")
df_narrow$round <- gsub("r", "", df_narrow$round)
df_narrow %>%
group_by(treatment) %>%
select(investment) %>%
summarise_all(funs(mean, sd))
df_narrow %>%
group_by(treatment) %>%
ggplot(., aes(treatment, investment)) +
stat_summary(fun.y = mean, geom = "bar", fill="grey") +
stat_summary(fun.data = mean_se, geom = "errorbar", width=0.1) +
labs(y = "mean and standard error", x = "Treatment", title = "Mean and Error Bars of Each Treatment") +
theme_classic()
rm(list = ls()) # Clear environment
library(tidyverse)
library(cowplot)
library(sandwich)
library(lmtest)
df <- read_csv("sutterexperiment.csv")
old.names <- colnames(df)
new.names <- tolower(old.names)
colnames(df) <- new.names
rm(new.names, old.names)
df$treatment <- tolower(df$treatment)
df <- df %>%
mutate(uniquesubject = paste(session, treatment, subject, sep = "_"))
df <- df %>%
mutate(uniqueteam = paste(session, team, sep = "_"))
df <- df %>% mutate(uniqueteam = ifelse(treatment == "individuals", uniquesubject, uniqueteam))
df_narrow <- df %>%
gather("round", "investment", -c(session, subject, treatment, team, uniquesubject, uniqueteam)) %>%
arrange(session, subject, treatment, team)
# df %>% gather("key", "value", x, y, z) is equivalent to df %>% pivot_longer(c(x, y, z), names_to = "key", values_to = "value")
#df_narrow <- read_csv("sutterexperiment_long.csv")
df_narrow$round <- gsub("r", "", df_narrow$round)
df_narrow %>%
group_by(treatment) %>%
select(investment) %>%
summarise_all(funs(mean, sd))
df_narrow %>%
group_by(treatment) %>%
ggplot(., aes(treatment, investment)) +
stat_summary(fun.y = mean, geom = "bar", fill="grey") +
stat_summary(fun.data = mean_se, geom = "errorbar", width=0.1) +
labs(y = "mean and standard error", x = "Treatment", title = "Mean and Error Bars of Each Treatment") +
theme_classic()
#table1 <- df_narrow %>%  filter(treatment == c("individuals", "teams"))%>%  group_by(round, treatment) %>%  summarise(y = mean(investment))
#fig1 <- ggplot(table1, aes(round, y, group = treatment)) + geom_line(color = "grey") + geom_point(alpha = 0.75, aes(shape = treatment))
fig1 <- df_narrow %>%
select(treatment, round, investment) %>%
filter(treatment == c("individuals", "teams")) %>%
group_by(round, treatment) %>%
summarise(y = mean(investment)) %>%
ggplot(., aes(round, y)) +
geom_line(aes(group = treatment), color = "grey") +
geom_point(alpha=0.75, aes(shape = treatment)) +
labs(size = "Round") +
theme_classic()
fig1
table2.1 <- df_narrow %>%
filter(treatment == "individuals") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2.2 <- df_narrow %>%
filter(treatment == "pay-comm") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2.3 <- df_narrow %>%
filter(treatment == "message") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2 <- rbind(table2.1, table2.2)
table2 <- rbind(table2, table2.3)
fig2 <- ggplot(table2, aes(round, y, group = treatment)) + geom_line(color = "grey") + geom_point(alpha = 0.75, aes(shape = treatment))
fig2
pic2 <- df_narrow %>%
select(treatment, round, investment) %>%
filter(treatment == c("individuals", "pay-comm", "message")) %>%
group_by(treatment, round) %>%
summarise(y = mean(investment, na.rm = TRUE)) %>%
ggplot(., aes(round, y)) +
geom_line(aes(group = treatment), color = "grey") +
geom_point(alpha=0.75, aes(shape = treatment)) +
labs(size = "Round") +
theme_classic()
pic2
fig3 <- df_narrow %>%
select(treatment, round, investment) %>%
filter(treatment == c("individuals", "mixed")) %>%
group_by(round, treatment) %>%
summarise(y = mean(investment)) %>%
ggplot(., aes(round, y)) +
geom_line(aes(group = treatment), color = "grey") +
geom_point(alpha=0.75, aes(shape = treatment)) +
labs(size = "Round") +
theme_classic()
fig3
rm(table1, table2.1, table2.2, table2.3, table2, table3)
plot_grid(fig1, fig2, fig3,
labels = c('a', 'b', 'c'),
nrow = 1)
df_team_avg <- df_narrow %>%
group_by(treatment, uniqueteam) %>%
summarise(mean(investment))
# should be get 99 rows
df_narrow %>%
group_by(uniqueteam) %>%
summarise(mean(investment))
ppl <- df_team_avg$`mean(investment)`[which(df_team_avg == "individuals")]
team <- df_team_avg$`mean(investment)`[which(df_team_avg == "teams")]
wilcox.test(ppl, team, var.equal=F, paired = F)
pay <- df_team_avg$`mean(investment)`[which(df_team_avg == "pay-comm")]
mes <- df_team_avg$`mean(investment)`[which(df_team_avg == "message")]
wilcox.test(ppl, pay, var.equal = F, paired = F)
wilcox.test(pay, mes, var.equal = F, paired = F)   # 0.06903
wilcox.test(team, mes, var.equal = F, paired = F)
wilcox.test(team, pay, var.equal = F, paired = F)
#df_narrow <- cbind(df_narrow, dummy(df_narrow$treatment, sep = "_"))
m <- lm(investment ~ treatment, data = df_narrow)
summary(m)
vcov_subjectid <- sandwich::vcovCL(m, cluster = df_narrow$uniquesubject)
lmtest::coeftest(m, vcov_subjectid)
pic2 <- df_narrow %>%
select(treatment, round, investment) %>%
filter(treatment == c("individuals" or "pay-comm" or "message")) %>%
fig2
fig2
knitr::opts_chunk$set(echo = TRUE)
# a.
tute1 <- read.csv("/Users/apple/Desktop/bc_f19_econ/Forecasting/Probset1_files/tute1.csv", header = TRUE)
# bayesian updating -------------------------------------------------------
# x|theta ~ Binomial(n,theta)
# theta ~ Beta(a,b)
## the beta distribution:
curve(dbeta(x,1,1),ylim=c(0,5),ylab="Beta(a,b)")
for(i in 2:20) curve(dbeta(x,i,i), add=T, col=i)
# conjugate posterior: theta|x ~ Beta(x+a, n-x+b)
sim_learning <- function(a=1,b=1,n=100,n_reps=100, q=1,true_p = 0.25,bias=F,learning=T,title=NULL) {
beta_mean <- function() return((a) / (a + b))
pr <- beta_mean()
data <- c(pr)
for(i in 1:n_reps) {
x <- rbinom(1, 1, true_p)
if(bias){
if(x==1) ps <- (1-q)*(beta_mean()) + q*pr
else ps <- q*(beta_mean()) + (1-q)*pr
} else {
ps <- q*beta_mean() + (1-q)*pr
}
data <- append(data, ps)
if(learning){
if(x == 1){ # a + x
a <- a + 1
}
else{ # a + (n-x)
b <- b + 1
}
}
}
plot(data, type = "l", ylim = c(0,1), xlab = "Flip", ylab = "P(Heads)", main=title)
abline(h=true_p, col="red")
return(data)
}
# no learning
sim_learning(n_reps = 10000, learning = F)
# bayesian updating -------------------------------------------------------
# x|theta ~ Binomial(n,theta)
# theta ~ Beta(a,b)
## the beta distribution:
curve(dbeta(x,1,1),ylim=c(0,5),ylab="Beta(a,b)")
for(i in 2:20) curve(dbeta(x,i,i), add=T, col=i)
# conjugate posterior: theta|x ~ Beta(x+a, n-x+b)
sim_learning <- function(a=1,b=1,n=100,n_reps=100, q=1,true_p = 0.25,bias=F,learning=T,title=NULL) {
beta_mean <- function() return((a) / (a + b))
pr <- beta_mean()
data <- c(pr)
for(i in 1:n_reps) {
x <- rbinom(1, 1, true_p)
# random binomial curve,
# rbinom(1,1,0.5)
if(bias){
if(x==1) ps <- (1-q)*(beta_mean()) + q*pr
else ps <- q*(beta_mean()) + (1-q)*pr
} else {
ps <- q*beta_mean() + (1-q)*pr
}
data <- append(data, ps)
if(learning){
if(x == 1){ # a + x
a <- a + 1
}
else{ # a + (n-x)
b <- b + 1
}
}
}
plot(data, type = "l", ylim = c(0,1), xlab = "Flip", ylab = "P(Heads)", main=title)
abline(h=true_p, col="red")
return(data)
}
# no learning
sim_learning(n_reps = 10000, learning = F)
# learning
par(mfrow=c(2,2))
sim_learning(n_reps=10, title="N=10")
sim_learning(n_reps=10^2, title="N=10^2")
sim_learning(n_reps=10^3, title="N=10^3")
sim_learning(n_reps=10^4, title="N=10^4")
dev.off()
# confirmation bias (sort of...)
sim_learning(n_reps = 1000, learning = T, bias = T, q=1)
sim_learning(n_reps = 1000, learning = T, q=1)
sim_learning(n_reps = 1000, learning = T, bias = T, q=0.25)
sim_learning(n_reps = 1000, learning = T, q=0.25)
sim_learning(n_reps = 1000, learning = T, q=1)
sim_learning(n_reps = 1000, learning = T, q=0.25)
# attempt at a model of confirmation bias
## sort of works - but needs improvement
sim_bias <- function(n=100,true_p = 0.25, samp_size=4, alpha = 0.05, bias=F,title=NULL) {
a <- b <- 1
beta_mean <- function() return((a) / (a + b))
pr <- beta_mean()
posteriors <- c(pr)
data <- c()
S <- c()
for(i in 1:n) {
x <- rbinom(samp_size, 1, true_p)
if(bias){
test <- binom.test(sum(x),length(x),pr)
if(test$p.value >= alpha) {
a <- a + sum(x) # a + x
b <- b + (length(x) - sum(x)) # b + (n-x)
} else {
s <- 0
new_pvalue <- 0
while(new_pvalue<alpha){
new_x <- rbinom(samp_size, 1, true_p)
new_test <- binom.test(sum(new_x), length(new_x), pr)
new_pvalue <- new_test$p.value
s <- s+1
}
S <- append(S, s)
a <- a + sum(new_x) # a + x
b <- b + (length(new_x) - sum(new_x)) # b + (n-x)
}
ps <- beta_mean()
} else {
a <- a + sum(x) # a + x
b <- b + (length(x) - sum(x)) # b + (n-x)
ps <- beta_mean()
}
posteriors <- append(posteriors, ps)
}
par(mfrow=c(1,2))
plot(posteriors, type = "l", col="black", ylim = c(0,1), xlab = "Sample", ylab = "P(Fair)", main=title)
abline(h=true_p, col="red")
hist(S,col="gray", main="", xlab="Resampling")
}
sim_bias(bias=T, samp_size = 52)
S <- append(S, s)
# attempt at a model of confirmation bias
## sort of works - but needs improvement
sim_bias <- function(n=100,true_p = 0.25, samp_size=4, alpha = 0.05, bias=F,title=NULL) {
a <- b <- 1
beta_mean <- function() return((a) / (a + b))
pr <- beta_mean()
posteriors <- c(pr)
data <- c()
S <- c()
for(i in 1:n) {
x <- rbinom(samp_size, 1, true_p)
if(bias){
test <- binom.test(sum(x),length(x),pr)
if(test$p.value >= alpha) {
a <- a + sum(x) # a + x
b <- b + (length(x) - sum(x)) # b + (n-x)
} else {
s <- 0
new_pvalue <- 0
while(new_pvalue<alpha){
new_x <- rbinom(samp_size, 1, true_p)
new_test <- binom.test(sum(new_x), length(new_x), pr)
new_pvalue <- new_test$p.value
s <- s+1
}
S <- append(S, s)
a <- a + sum(new_x) # a + x
b <- b + (length(new_x) - sum(new_x)) # b + (n-x)
}
ps <- beta_mean()
} else {
a <- a + sum(x) # a + x
b <- b + (length(x) - sum(x)) # b + (n-x)
ps <- beta_mean()
}
posteriors <- append(posteriors, ps)
}
par(mfrow=c(1,2))
plot(posteriors, type = "l", col="black", ylim = c(0,1), xlab = "Sample", ylab = "P(Fair)", main=title)
abline(h=true_p, col="red")
hist(S,col="gray", main="", xlab="Resampling")
}
sim_bias(bias=T, samp_size = 52)
sim_bias(bias = T, samp_size = 40)
sim_bias(bias=T, samp_size = 52)
sim_bias(bias = T, samp_size = 40)
sim_bias(bias=T, samp_size = 52)
sim_bias(bias = T, samp_size = 40)
sim_bias(bias=T, samp_size = 52)
sim_bias(bias = T, samp_size = 40)
hsales
hsale
library(fpp2)
hsales
lambda <- BoxCox.lambda(usnetelec)
autoplot(BoxCox(usnetelec, lambda))
lambda
