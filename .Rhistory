# Clear the workspace
rm(list = ls()) # Clear environment
gc()            # Clear unused memory
cat("\f")       # Clear the console
library(ggplot2)
library(fpp2)
library(dplyr)
library(tidyr)
library(readxl)
library(stargazer)
books
books$'Paperback'
books
book = books
book
colnames(book)
colnames(books)
plot(books)
autoplot(books)
books %>% ses()
ses(books[, "Paperback"]
)
books[, "Paperback"]
# Import Data
df <- read_excel("Europe_Policy_Uncertainty_Data.xlsx")
getwd
getwd()
# Import Data
df <- read_excel("Europe_Policy_Uncertainty_Data.xlsx")
library(readxl)
# Import Data
df <- read_excel("Europe_Policy_Uncertainty_Data.xlsx")
View(df)
groupby(df$Month)
library(ggplot2)
library(fpp2)
library(dplyr)
library(tidyr)
library(readxl)
library(stargazer)
group_by(df$Month)
df %>% group_by(Month)
df %>% group_by(Month) %>% summarise(sum(European_News_Index))
as.double()
library(tidyverse)
library(cowplot)
library(kableExtra)
library(margins)
df <- read_csv("punnoise_data.csv")
d1 <- df %>%
mutate(round = paste0("r",round,"")) %>%
spread(round, sum_group_contributions) %>%
select(group_id, r1, r50) %>%
filter_at(.vars = vars(r1, r50), .vars_predicate = any_vars(!is.na(.)))
setDT(d1)[, r1:= r1[!is.na(r1)][1L] , by = group_id]
setDT(d1)[, r50:= r50[!is.na(r50)][1L] , by = group_id]
data.table::setDT(d1)[, r1:= r1[!is.na(r1)][1L] , by = group_id]
data.table::setDT(d1)[, r50:= r50[!is.na(r50)][1L] , by = group_id]
d1 <- d1 %>%
mutate(startFinish = ifelse(
r50 < 60 ,
"Group did not finish with full contributions" ,
ifelse(r1<60 & r50 == 60 ,
"Group started low, but finished with full contributions",
"Group started and finished with full contributions")
)) %>%
select(group_id, startFinish) %>%
unique()
d2 <- merge(df, d1)
d2 %>%
filter(punishment ==  1 & noise == 0) %>%
mutate(Round_Group = (round - 1) %/% 5) %>%
group_by(Round_Group , startFinish) %>%
mutate(mp = mean(received_punishment)) %>%
select(Round_Group, mp , startFinish) %>%
unique() %>%
ggplot(aes(x = Round_Group , y = mp , group = startFinish)) +
geom_line(aes(linetype = startFinish)) +
scale_x_continuous(name = "Rounds/5" , breaks = seq(0,10,1)) +
scale_y_continuous(name = "Punishment" , breaks = seq(0,2.5,0.5))
