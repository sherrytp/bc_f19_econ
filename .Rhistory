retaildata <- readxl::read_excel("/Users/apple/Downloads/retail.xlsx", skip = 1)
# skip=1 is required because the Excel sheet has two header rows
samplets <- ts(retaildata[, "A3349873A"],
frequency = 12, start = c(1982, 4))
# b.
myts <- ts(retaildata[, "A3349588R"],
frequency = 12, start = c(1982, 4))
# c.
autoplot(myts)
ggseasonplot(myts)
ggsubseriesplot(myts)   # might be the best
gglagplot(myts)
ggAcf(myts)
# ?????? time plots of following time series?
help(bicoal)
# Annual bituminous coal production in the USA: 1920–1968.
autoplot(bicoal)
help(chicken)
# Price of chicken in US (constant dollars): 1924–1993.
autoplot(chicken)
help(dole)
# Monthly total of people on unemployment benefits in Australia (Jan 1965 – Jul 1992).
autoplot(dole)
help(usdeaths)
# Monthly accidental deaths in USA.
autoplot(usdeaths)
help(lynx)
# Annual Canadian Lynx trappings 1821-1934.
autoplot(lynx)
help("goog")
# Closing stock prices of GOOG from the NASDAQ exchange, for 1000 consecutive trading days between 25 February 2013 and 13 February 2017. Adjusted for splits. goog200 contains the first 200 observations from goog.
autoplot(goog) + ylab("Stock Price in Dollars $") + ggtitle("Google Stock")
help(writing)
# Industry sales for printing and writing paper (in thousands of French francs): Jan 1963 – Dec 1972.
autoplot(writing)
help(fancy)
# Monthly sales for a souvenir shop on the wharf at a beach resort town in Queensland, Australia.
autoplot(fancy)
help(a10)
# Monthly anti-diabetic drug sales in Australia from 1991 to 2008.
# Total monthly scripts for pharmaceutical products falling under ATC code A10, as recorded by the Australian Health Insurance Commission. July 1991 - June 2008.
autoplot(h02)
ggseasonplot(writing)
ggseasonplot(fancy)
ggseasonplot(a10)
ggseasonplot(h02)
ggsubseriesplot(writing)
ggsubseriesplot(fancy)
ggsubseriesplot(a10)
ggsubseriesplot(h02)
autoplot(hsales)
ggseasonplot(hsales)
ggsubseriesplot(hsales)
gglagplot(hsales)
ggAcf(hsales)
# US Sales, cyclical where the trend shown not fit to a certain period every year.
# Some repetition of seasonality around.
autoplot(usdeaths)
ggseasonplot(usdeaths)
ggsubseriesplot(usdeaths)
gglagplot(usdeaths)
ggAcf(usdeaths)
# Seasonality with a peak in July.
autoplot(bricksq)
ggseasonplot(bricksq)
ggsubseriesplot(bricksq)
gglagplot(bricksq)
ggAcf(bricksq)
# Trend of growth overall; seasonality before 1975s every year; cyclical pattern similar to business cycles not in fixed time periods.
autoplot(sunspotarea)
#ggseasonplot(sunspotarea)
#ggsubseriesplot(sunspotarea)
gglagplot(sunspotarea)
ggAcf(sunspotarea)
# There is no strong seasonality (very interesting that the system code tells me there isn't); however, there might be a cyclinal pattern with three periods.
autoplot(gasoline)
ggseasonplot(gasoline)
#ggsubseriesplot(gasoline)
gglagplot(gasoline)
ggAcf(gasoline)
# There is no show of seasonality or cyclicity but there is a growth trend from 1990 to 2005, and then the gasoline amounts flutate roughly around a level.
autoplot(arrivals)
#ggseasonplot(arrivals)
#ggsubseriesplot(arrivals)
```{r packages, results = "hide", warnings = FALSE}
```{r packages, results = "hide", warining = FALSE}
```{r packages, results = "hide", warning = FALSE}
```{r packages, results = "hide"}
library(ggplot2)
```{r packages}
# a.
tute1 <- read.csv("tute1.csv", header = TRUE)
# a.
retaildata <- readxl::read_excel("retail.xlsx", skip = 1)
df <- read_csv("sutterexperiment.csv")
old.names <- colnames(df)
new.names <- tolower(old.names)
colnames(df) <- new.names
rm(new.names, old.names)
df$treatment <- tolower(df$treatment)
df$treatment <- gsub("individuals", "individual", df$treatment)
df <- df %>%
mutate(uniquesubject = paste(session, treatment, subject, sep = "_"))
df <- df %>%
mutate(uniqueteam = ifelse(treatment == "individual", paste(session, treatment, subject, sep = "_"), paste(session, subject, sep = "_")))
df_narrow <- gather(df, "round", "investment", -c(session, subject, treatment, team, uniquesubject, uniqueteam))
df_narrow <- arrange(df_narrow, session, subject, treatment, team)
#df_narrow <- read_csv("sutterexperiment_long.csv")
df_narrow$round <- gsub("r", "", df_narrow$round)
df_narrow %>%
group_by(treatment) %>%
select(investment) %>%
summarise_all(funs(mean, sd))
df_narrow %>%
group_by(treatment) %>%
ggplot(., aes(treatment, investment)) +
stat_summary(fun.y = mean, geom = "bar", fill="grey") +
stat_summary(fun.data = mean_se, geom = "errorbar", width=0.1) +
labs(y = "mean and standard error", x = "Treatment", title = "Mean and Error Bars of Each Treatment") +
theme_classic()
table1 <- df_narrow %>%
filter(treatment == c("individual", "teams")) %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
fig1 <- ggplot(table1, aes(round, y, group = treatment)) + geom_line(color = "grey") + geom_point(alpha = 0.75, aes(shape = treatment))
fig1
table2.1 <- df_narrow %>%
filter(treatment == "individual") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2.2 <- df_narrow %>%
filter(treatment == "pay-comm") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2.3 <- df_narrow %>%
filter(treatment == "message") %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
table2 <- rbind(table2.1, table2.2)
table2 <- rbind(table2, table2.3)
fig2 <- ggplot(table2, aes(round, y, group = treatment)) + geom_line(color = "grey") + geom_point(alpha = 0.75, aes(shape = treatment))
fig2
table3 <- df_narrow %>%
filter(treatment == c("individual", "mixed")) %>%
group_by(round, treatment) %>%
summarise(y = mean(investment))
fig3 <- ggplot(table3, aes(round, y, group = treatment)) + geom_line(color = "grey") + geom_point(alpha = 0.75, aes(shape = treatment))
fig3
plot_grid(fig1, fig2, fig3,
labels = c('a', 'b', 'c'),
nrow = 1)
df_team_avg <- df_narrow %>%
group_by(subject, team) %>%
summarise(mean(investment))
View(df_team_avg)
View(table1)
x <- table1 %>%
group_by(treatment) %>%
summarize(mean(investment))
x <- if(table1$treatment == "individual"){
list(table1$y)
}
View(x)
y <- if(table1$treatment == "teams"){
list(table1$y)
}
wilcox.test(x ~ y, var.equal=F)
wilcox.test(y, x, var.equal=F)
x <- if(table1$treatment == "individual"){
table(table1$y)
}
y <- if(table1$treatment == "teams"){
table(table1$y)
}
wilcox.test(y, x, var.equal=F)
x <- table1$y[which(table1$treatment == "individual")]
x <- table1$y[which(table1$treatment == "individual")]
y <- table1$y[which(table1$treatment == "teams")]
wilcox.test(y, x, var.equal=F)
wilcom.test(y, x, paired = "FALSE")
wilcom.test(y, x, paired = "FALSE")
wilcom.test(y, x, paired = FALSE)
wilcom.test(y, x, paired = FALSE)
wilcox.test(y, x, paired = FALSE)
wilcox.test(y, x, var.equal=F)
wilcox.test(y, x, var.equal=F, paired = F)
x <- table2$y[which(table2$treatment == "individual")]
y <- table2$y[which(table2$treatment == "pay-comm")]
z <- table2$y[which(table2$treatment == "message")]
wilcox.test(y, x, var.equal = F, paired = F)
x_idv <- table1$y[which(table1$treatment == "individual")]
y_team <- table1$y[which(table1$treatment == "teams")]
wilcox.test(y_team, x_idv, var.equal=F, paired = F)
wilcox.test(y2_pc, x2, var.equal = F, paired = F)
x2 <- table2$y[which(table2$treatment == "individual")]
y2_pc <- table2$y[which(table2$treatment == "pay-comm")]
z2_m <- table2$y[which(table2$treatment == "message")]
wilcox.test(y2_pc, x2, var.equal = F, paired = F)
wilcox.test(y2_pc, z2_m, var.equal = F, paired = F)
wilcox.test(y_team, z2_m, var.equal = F, paired = F)
wilcox.test(z2_m, y2_pc, var.equal = F, paired = F)
wilcox.test(y_team, y2_pc, var.equal = F, paired = F)
wilcox.test(y_team, z2_m, var.equal = F, paired = F)
View(df)
View(df)
View(df)
View(df_narrow)
View(df_narrow)
View(df_team_avg)
View(df_team_avg)
View(df_narrow)
knitr::opts_chunk$set(echo = TRUE)
ggseasonplot(arrivals[, 1])
ggseasonplot(arrivals[,1])
library(ggplot2)
library(ggplot2)
library(fpp2)
library(ggplot2)
library(fpp2)
summary(cars)
ggseasonplot(arrivals[,1])
ggseasonplot(arrivals[,1])
ggsubseriesplot(arrivals[,1])
ggsubseriesplot(gasoline[,1])
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # Clear environment
rm(list = ls()) # Clear environment
gc()            # Clear unused memory
cat("\f")       # Clear the console
library(ggplot2)
library(ggplot2)
library(fpp2)
ggsubseriesplot(gasoline[1,])
ggsubseriesplot(gasoline[,1])
autoplot(gasoline)
autoplot(gasoline)
ggseasonplot(gasoline)
autoplot(gasoline)
ggseasonplot(gasoline)
ggsubseriesplot(gasoline[,1])
gasoline
gglagplot(gasoline)
knitr::opts_chunk$set(echo = TRUE)
autoplot(arrivals)
library(ggplot2)
library(ggplot2)
library(fpp2)
autoplot(arrivals)
ggseasonplot(arrivals[,1])
autoplot(arrivals)
japan1 <- ggseasonplot(arrivals[,1])
nz1 <- ggseasonplot(arrivals[,2])
uk1 <- ggseasonplot(arrivals[,3])
us1 <- ggseasonplot(arrivals[,4])
plot_grid(japan1, nz1, uk1, us1, nrow = 1)
library(cowplot)
plot_grid(japan1, nz1, uk1, us1, nrow = 1)
japan2 <- ggsubseriesplot(arrivals[,1])
nz2 <- ggsubseriesplot(arrivals[,2])
uk2 <- ggsubseriesplot(arrivals[,3])
us2 <- ggsubseriesplot(arrivals[,4])
plot_grid(japan2, nz2, uk2, us2
, labels = c("Japan", "NZ", "UK", "US")
, nrow = 1
)
# 9/24
e <- tsCV(goog200, rwf, drift = TRUE, h=1)
# Clear the workspace
rm(list = ls()) # Clear environment
library(ggplot2)
library(fpp2)
library(dplyr)
# 9/24
e <- tsCV(goog200, rwf, drift = TRUE, h=1)
sqrt(mean(e^2), na.rm = TRUE)
sqrt(mean(e^2, na.rm = TRUE))
sqrt(mean(residuals(rwf(goog200, drift=TRUE))^2,
na.rm=TRUE))
# Smaller RMSE
goog200 %>%
tsCV(forecastingfunction = rwf, drift = TRUE, h = 1) -> e
e^2 %>% mean(na.rm = TRUE) %>% sqrt
goog200 %>% rwf(drift = TRUE) %>% residuals -> res
res^2 %?% mean(na.rm = TRUE, h = 1)
res^2 %>% mean(na.rm = TRUE, h = 1)
goog200 %>% rwf(drift = TRUE) %>% residuals -> res
e^2 %>% mean(na.rm = TRUE) %>% sqrt
# Smaller RMSE
goog200 %>%
tsCV(forecastingfunction = rwf, drift = TRUE, h = 1) -> e
# 9/24
e <- tsCV(goog200, rwf, drift = TRUE, h=1)
e^2 %>% mean(na.rm = TRUE) %>% sqrt
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # Clear environment
gc()            # Clear unused memory
cat("\f")       # Clear the console
library(ggplot2)
library(fpp2)
library(cowplot)
summary(cars)
?gold
?woolyrnq
?gas
# a.
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
# b.
frequency(gold)
frequency(woolyrnq)
frequency(gas)
# c.
which.max(gold)   # 770 is the highest outlier in the plot.
which.max(woolyrnq)
which.max(gas)
# a.
tute1 <- read.csv("tute1.csv", header = TRUE)
pwd
getwd
getwd()
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # Clear environment
gc()            # Clear unused memory
cat("\f")       # Clear the console
setwd("/Users/apple/Desktop/bc_f19_econ/Forecasting/Probset1_files")
library(ggplot2)
library(fpp2)
library(cowplot)
summary(cars)
?gold
?woolyrnq
?gas
# a.
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
# b.
frequency(gold)
frequency(woolyrnq)
frequency(gas)
# c.
which.max(gold)   # 770 is the highest outlier in the plot.
which.max(woolyrnq)
which.max(gas)
# a.
tute1 <- read.csv("tute1.csv", header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # Clear environment
gc()            # Clear unused memory
cat("\f")       # Clear the console
setwd("/Users/apple/Desktop/bc_f19_econ/Forecasting/Probset1_files")
library(ggplot2)
library(fpp2)
library(cowplot)
summary(cars)
?gold
?woolyrnq
?gas
# a.
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
# b.
frequency(gold)
frequency(woolyrnq)
frequency(gas)
# c.
which.max(gold)   # 770 is the highest outlier in the plot.
which.max(woolyrnq)
which.max(gas)
# a.
tute1 <- read.csv("/Users/apple/Desktop/bc_f19_econ/Forecasting/Probset1_files/tute1.csv", header = TRUE)
# b.
mytimeseries <- ts(tute1[,-1], start = 1981, frequency = 4)
# The [,-1] removes the first column which contains the quarters.
# c.
autoplot(mytimeseries, facets = TRUE)
# Alternatively,
autoplot(mytimeseries)
# a.
retaildata <- readxl::read_excel("retail.xlsx", skip = 1)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # Clear environment
gc()            # Clear unused memory
cat("\f")       # Clear the console
library(ggplot2)
library(fpp2)
library(cowplot)
summary(cars)
?gold
?woolyrnq
?gas
# a.
autoplot(gold)
autoplot(woolyrnq)
autoplot(gas)
# b.
frequency(gold)
frequency(woolyrnq)
frequency(gas)
# c.
which.max(gold)   # 770 is the highest outlier in the plot.
which.max(woolyrnq)
which.max(gas)
# a.
tute1 <- read.csv("/Users/apple/Desktop/bc_f19_econ/Forecasting/Probset1_files/tute1.csv", header = TRUE)
# b.
mytimeseries <- ts(tute1[,-1], start = 1981, frequency = 4)
# The [,-1] removes the first column which contains the quarters.
# c.
autoplot(mytimeseries, facets = TRUE)
# Alternatively,
autoplot(mytimeseries)
# a.
retaildata <- readxl::read_excel("/Users/apple/Desktop/bc_f19_econ/Forecasting/Probset1_files/retail.xlsx", skip = 1)
# skip=1 is required because the Excel sheet has two header rows
samplets <- ts(retaildata[, "A3349873A"],
frequency = 12, start = c(1982, 4))
# b.
myts <- ts(retaildata[, "A3349588R"],
frequency = 12, start = c(1982, 4))
# c.
autoplot(myts)
ggseasonplot(myts)
ggsubseriesplot(myts)   # might be the best
gglagplot(myts)
ggAcf(myts)
# ?????? time plots of following time series?
help(bicoal)
# Annual bituminous coal production in the USA: 1920–1968.
autoplot(bicoal)
help(chicken)
# Price of chicken in US (constant dollars): 1924–1993.
autoplot(chicken)
help(dole)
# Monthly total of people on unemployment benefits in Australia (Jan 1965 – Jul 1992).
autoplot(dole)
help(usdeaths)
# Monthly accidental deaths in USA.
autoplot(usdeaths)
help(lynx)
# Annual Canadian Lynx trappings 1821-1934.
autoplot(lynx)
help("goog")
# Closing stock prices of GOOG from the NASDAQ exchange, for 1000 consecutive trading days between 25 February 2013 and 13 February 2017. Adjusted for splits. goog200 contains the first 200 observations from goog.
autoplot(goog) + ylab("Stock Price in Dollars $") + ggtitle("Google Stock")
help(writing)
# Industry sales for printing and writing paper (in thousands of French francs): Jan 1963 – Dec 1972.
autoplot(writing)
help(fancy)
# Monthly sales for a souvenir shop on the wharf at a beach resort town in Queensland, Australia.
autoplot(fancy)
help(a10)
# Monthly anti-diabetic drug sales in Australia from 1991 to 2008.
# Total monthly scripts for pharmaceutical products falling under ATC code A10, as recorded by the Australian Health Insurance Commission. July 1991 - June 2008.
autoplot(h02)
ggseasonplot(writing)
ggseasonplot(fancy)
ggseasonplot(a10)
ggseasonplot(h02)
ggsubseriesplot(writing)
ggsubseriesplot(fancy)
ggsubseriesplot(a10)
ggsubseriesplot(h02)
autoplot(hsales)
ggseasonplot(hsales)
ggsubseriesplot(hsales)
gglagplot(hsales)
ggAcf(hsales)
# US Sales, cyclical where the trend shown not fit to a certain period every year.
# Some repetition of seasonality around.
autoplot(usdeaths)
ggseasonplot(usdeaths)
ggsubseriesplot(usdeaths)
gglagplot(usdeaths)
ggAcf(usdeaths)
# Seasonality with a peak in July.
autoplot(bricksq)
ggseasonplot(bricksq)
ggsubseriesplot(bricksq)
gglagplot(bricksq)
ggAcf(bricksq)
# Trend of growth overall; seasonality before 1975s every year; cyclical pattern similar to business cycles not in fixed time periods.
autoplot(sunspotarea)
#ggseasonplot(sunspotarea)
#ggsubseriesplot(sunspotarea)
gglagplot(sunspotarea)
ggAcf(sunspotarea)
# There is no strong seasonality (very interesting that the system code tells me there isn't); however, there might be a cyclinal pattern with three periods.
autoplot(gasoline)
ggseasonplot(gasoline)
#ggsubseriesplot(gasoline[,1])
gglagplot(gasoline)
ggAcf(gasoline)
# There is no show of seasonality or cyclicity but there is a growth trend from 1990 to 2005, and then the gasoline amounts flutate roughly around a level.
autoplot(arrivals)
japan1 <- ggseasonplot(arrivals[,1])
nz1 <- ggseasonplot(arrivals[,2])
uk1 <- ggseasonplot(arrivals[,3])
us1 <- ggseasonplot(arrivals[,4])
plot_grid(japan1, nz1, uk1, us1
, labels = c("Japan", "NZ", "UK", "US")
, nrow = 1)
japan2 <- ggsubseriesplot(arrivals[,1])
nz2 <- ggsubseriesplot(arrivals[,2])
uk2 <- ggsubseriesplot(arrivals[,3])
us2 <- ggsubseriesplot(arrivals[,4])
plot_grid(japan2, nz2, uk2, us2
, labels = c("Japan", "NZ", "UK", "US")
, nrow = 1
)
