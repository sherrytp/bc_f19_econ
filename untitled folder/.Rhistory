getwd()
# Clear the workspace
rm(list = ls()) # Clear environment
gc()            # Clear unused memory
cat("\f")       # Clear the console
library(ggplot2)
library(fpp2)
library(dplyr)
library(tidyr)
library(readxl)
library(stargazer)
# Import Data
df <- read_excel("Europe_Policy_Uncertainty_Data.xlsx")
df <- na_if(df, "-")
colnames(df) <- df %>%
colnames(.) %>%
gsub(pattern = "_", replacement = "-")
target2bal <- df[169:390,1:22]
is.na(target2bal$Greece)
is.na(target2bal$`Greece-policy-uncertainty`)
# Descriptive
sapply(target2bal, function(x) sum(is.na(x)))
table1 <- target2bal[3:22] %>%
# Find the mean, st. dev., min, and max for each variable
summarise_each(funs(mean, sd, min, max)) %>%
# Move summary stats to columns
gather(key, value, everything()) %>%
separate(key, into = c("variable", "stat"), sep = "_") %>%
spread(stat, value) %>%
# Set order of summary statistics
select(variable, mean, sd, min, max) %>%
t()
# Seasonal Decomposition/Transformation
myts <- ts(target2bal$Greece, start = c(2001,1), frequency = 12)
autoplot(myts)
lambda <- BoxCox.lambda(myts)
autoplot(BoxCox(myts, lambda))
lambda  # -0.4160249
myts %>% decompose(type = "additive") %>%
autoplot() + xlab("Year")
myts %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition")
# Seasonal naive method
# Split the train and test sets
myts.train <- window(myts, end = c(2014,12))
myts.test <- window(myts, start = 2015)
autoplot(myts) +
autolayer(myts.train, series = "Train") +
autolayer(myts.test, series = "Test")
sn <- snaive(myts.train, h = 4*12)
autoplot(sn)
checkresiduals(sn)
sn <- snaive(myts.train, h = 4*12)
autoplot(sn)
checkresiduals(sn)
confusionMatrix(sn, myts.test)
accuracy(sn, myts.test) %>% stargazer()
autoplot(BoxCox(myts, lambda))
autoplot(myts)
BoxCox(myts.train) %>% snaive(., h = 4*12) -> sn
lambda <- BoxCox.lambda(myts)
BoxCox(myts.train, lambda) %>% snaive(., h = 4*12) -> sn
autoplot(sn)
checkresiduals(sn)
accuracy(sn, myts.test) %>% stargazer()
lambda <- BoxCox.lambda(myts.train)
BoxCox(myts.train, lambda) %>% snaive(., h = 4*12) -> sn
autoplot(sn)
checkresiduals(sn)
accuracy(sn, myts.test) %>% stargazer()
# transformation
ht <- holt(myts, h=15)
ht2 <- holt(myts, damped=TRUE, phi = 0.9, h=15)
autoplot(myts) +
autolayer(ht, series="Holt's method", PI=FALSE) +
autolayer(ht2, series="Damped Holt's method", PI=FALSE) +
ggtitle("Forecasts from Holt's method") + xlab("Year") +
guides(colour=guide_legend(title="Forecast"))
autoplot(ht2)
myts %>% hw(., seasonal = "multiplicative")
myts %>% hw(., seasonal = "multiplicative") %>%
autoplot()
myts.train %>%
hw(., seasonal = "multiplicative") %>%
autoplot()
myts.train %>%
hw(., seasonal = "multiplicative") %>%
autoplot() -> hw
accuracy(hw, myts.test)
accuracy(hw, myts.test)
myts.train %>%
hw(., seasonal = "multiplicative") -> hw
accuracy(hw, myts.test)
accuracy(hw2, myts.test)
myts.train %>%
hw(., seasonal = "multiplicative", damped = TRUE) -> hw2
accuracy(hw2, myts.test)
myts.train %>%
ets() %>% autoplot()
myts.train %>%
ets() %>% forecast(h = 15) %>%
autoplot()
accuracy(et, myts.test)
myts.train %>%
ets() %>% forecast(h = 15) -> et
accuracy(et, myts.test)
myts.train %>%
auto.arima() %>% forecast(h = 15) %>%
autoplot()
myts.train %>%
auto.arima() %>% forecast(h = 15) -> rm
accuracy(rm, myts.test)
accuracy(hw, myts.test)
